import 'dart:io';

import 'package:camera/camera.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:fall_app/bottom_bar_page.dart';
import 'package:fall_app/const/colors.dart';
import 'package:fall_app/pages/camera_view.dart';
import 'package:fall_app/pages/fal_page.dart';
import 'package:fall_app/pages/home_page.dart';
import 'package:fall_app/pages/login_view.dart';
import 'package:fall_app/services/api_service.dart';
import 'package:fall_app/services/fal_service.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:uuid/uuid.dart';

// import 'package:kartal/kartal.dart';
class FalSetting extends StatelessWidget {
  Future<bool> checkIfFalExists(String fal_id) async {
    final QuerySnapshot result = await FirebaseFirestore.instance
        .collection('fallar')
        .where('fal_id', isEqualTo: fal_id)
        .limit(1)
        .get();

    return result.docs.isNotEmpty;
  }

  const FalSetting(
      {Key? key,
      required this.imagePath,
      required this.camera,
      required this.falTuru, required this.userId})
      : super(key: key);
  final String imagePath;
  final String userId;
  final FalTuru falTuru;

  final CameraDescription camera;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Colors.black,
          ),
          onPressed: () => Navigator.pop(context),
        ),
      ),
      body: Column(
        children: [
          Padding(
            padding: const EdgeInsets.all(20.0),
            child: RichText(
              textAlign: TextAlign.justify,
              text: const TextSpan(
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                ),
                children: [
                  TextSpan(
                    text: 'FotoÄŸraf Ã§ek ðŸ“¸\n',
                    style: TextStyle(
                      color: Colors.orange,
                      fontFamily: 'AlfaSlabOne',
                    ),
                  ),
                  TextSpan(
                    text:
                        '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tðŸ”®FalÄ±nÄ± gÃ¶nder ',
                    style: TextStyle(
                      color: Colors.green,
                      fontFamily: 'AlfaSlabOne',
                    ),
                  ),
                  TextSpan(
                    text: '1 dk iÃ§inde\n \t\t\t\t\tgerÃ§ekleri Ã¶ÄŸren ðŸª„ ',
                    style: TextStyle(
                      color: Colors.indigo,
                      fontFamily: 'BrunoAceSC',
                    ),
                  ),
                ],
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 25, vertical: 10),
            child: Container(
              height: MediaQuery.of(context).size.height * .5,
              width: double.infinity,
              child: Container(
                decoration: BoxDecoration(
                    shape: BoxShape.rectangle,
                    boxShadow: [
                      BoxShadow(
                        color: Colors.grey.withOpacity(0.5), // GÃ¶lge rengi
                        spreadRadius: 2, // YayÄ±lma yarÄ±Ã§apÄ±
                        blurRadius: 20, // BulanÄ±klÄ±k yarÄ±Ã§apÄ±
                        offset: Offset(0, 10), // GÃ¶lgenin konumu (x, y)
                      ),
                    ],
                    borderRadius: BorderRadius.circular(20),
                    image: DecorationImage(
                        image: FileImage(File(imagePath)), fit: BoxFit.cover)),
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.only(bottom: 40.0, top: 30),
            child: SizedBox(
              width: double.infinity,
              height: 48,
              child: Padding(
                padding: const EdgeInsets.symmetric(horizontal: 25),
                child: ElevatedButton(
                    style: ElevatedButton.styleFrom(
                        backgroundColor: colorPurple,
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(15))),
                    onPressed: () async {
                      imagePa = imagePath;
                      try {
                        Fluttertoast.showToast(
                          msg:
                              "FalÄ±nÄ±z yorumlanÄ±yor. KÄ±sa sÃ¼rede sonuÃ§lanacaktÄ±r ve sonuca FallarÄ±m ekranÄ±ndan eriÅŸebilirsiniz.YÃ¶nlendirilene kadar lÃ¼tfen bekleyiniz..",
                          toastLength: Toast.LENGTH_LONG,
                          gravity: ToastGravity.CENTER,
                          backgroundColor: Colors.grey[700],
                          textColor: Colors.white,
                        );

                        await ApiService.sendMessage(
                          message: falTuru == FalTuru.ElFali
                              ? "Åžimdi sen dÃ¼nyanÄ±n en iyi el falcÄ±sÄ±sÄ±n ve elimi gÃ¶rÃ¼yormuÅŸ gibi sadece ele bakarak ÅŸaÅŸÄ±rtÄ±cÄ±, neden sonuÃ§ iliÅŸkisine dayalÄ±, kÄ±sa ve uzun vadeli tahminler yapan, geÃ§miÅŸ hakkÄ±nda tahminler yapan el falÄ± Ã¼ret. FalcÄ± gibi konuÅŸmaya direkt baÅŸla. Ã‡ok uzun ,detaylÄ± anlat ama sÄ±kÄ±cÄ± olmasÄ±n. Ä°lgi Ã§ekici olsun"
                              : falTuru == FalTuru.KahveFali
                                  ? "Åžimdi sen dÃ¼nyanÄ±n en iyi kahve falcÄ±sÄ±sÄ±n ve kahve falÄ±mÄ± gÃ¶rÃ¼yormuÅŸ gibi ÅŸaÅŸÄ±rtÄ±cÄ±, neden sonuÃ§ iliÅŸkisine dayalÄ±, kÄ±sa ve uzun vadeli tahminler yapan, geÃ§miÅŸ hakkÄ±nda tahminler yapan kahve falÄ± Ã¼ret. FalcÄ± gibi konuÅŸmaya direkt baÅŸla.Ã‡ok uzun ,detaylÄ± anlat ama sÄ±kÄ±cÄ± olmasÄ±n. Ä°lgi Ã§ekici olsun"
                                  : "Åžimdi sen dÃ¼nyanÄ±n en iyi yÃ¼z falcÄ±sÄ±sÄ±n ve yÃ¼z falÄ±mÄ± gÃ¶rÃ¼yormuÅŸ gibi ÅŸaÅŸÄ±rtÄ±cÄ±, neden sonuÃ§ iliÅŸkisine dayalÄ±, kÄ±sa ve uzun vadeli tahminler yapan, geÃ§miÅŸ hakkÄ±nda tahminler yapan yÃ¼z falÄ± Ã¼ret. FalcÄ± gibi konuÅŸmaya direkt baÅŸla.Ã‡ok uzun ,detaylÄ± anlat ama sÄ±kÄ±cÄ± olmasÄ±n. Ä°lgi Ã§ekici olsun",
                        );

                        addFal(
                          Uuid().v1(),
                          userId,
                          _findFalTuru(),
                          ApiService.fal,
                          imagePa,
                        );
                      } catch (e) {
                        print("error $e");
                      }
                      Navigator.pushAndRemoveUntil(
                        context,
                        MaterialPageRoute(
                          builder: (context) => BottomBarPage(camera: camera,userId: userId),
                        ),
                        (route) => false,
                      );
                    },

                    // onPressed: () async {
                    //   imagePa = imagePath;
                    //   Navigator.push(
                    //       context,
                    //       MaterialPageRoute(
                    //         builder: (context) => const FalPage(),
                    //       ));
                    //   try {
                    //     await ApiService.sendMessage(
                    //         message: falTuru == FalTuru.ElFali
                    //             ? "Åžimdi sen dÃ¼nyanÄ±n en iyi el falcÄ±sÄ±sÄ±n ve elimi gÃ¶rÃ¼yormuÅŸ gibi sadece ele bakarak ÅŸaÅŸÄ±rtÄ±cÄ±, neden sonuÃ§ iliÅŸkisine dayalÄ±, kÄ±sa ve uzun vadeli tahminler yapan, geÃ§miÅŸ hakkÄ±nda tahminler yapan el falÄ± Ã¼ret. FalcÄ± gibi konuÅŸmaya direkt baÅŸla."
                    //             : "Åžimdi sen dÃ¼nyanÄ±n en iyi kahve falcÄ±sÄ±sÄ±n ve kahve falÄ±mÄ± gÃ¶rÃ¼yormuÅŸ gibi ÅŸaÅŸÄ±rtÄ±cÄ±, neden sonuÃ§ iliÅŸkisine dayalÄ±, kÄ±sa ve uzun vadeli tahminler yapan, geÃ§miÅŸ hakkÄ±nda tahminler yapan el falÄ± Ã¼ret. FalcÄ± gibi konuÅŸmaya direkt baÅŸla.");
                    //     addFal(Uuid().v1(), userId, _findFalTuru(), ApiService.fal, imagePa,);
                    //   } catch (e) {
                    //     print("error $e");
                    //   }
                    // },
                    child: const Text("FalÄ± GÃ¶nder")),
              ),
            ),
          ),
        ],
      ),
    );
  }

  String _findFalTuru() => falTuru == FalTuru.ElFali
      ? "El FalÄ±"
      : falTuru == FalTuru.KahveFali
          ? "Kahve FalÄ±"
          : "YÃ¼z FalÄ±";
}
